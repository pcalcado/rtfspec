<?xml version="1.0"?>
<project name="rtfspec" default="package">
  <property name="build.dir" location="classes"/>

  <property name="lib.dir" location="lib"/>
  <property name="deps.dir" location="deps"/>

  <property name="source.dir" location="src/clj"/>

  <property name="test.base.dir" location="test"/>
  <property name="test.smoke.dir" location="${test.base.dir}/smoke"/>
  <property name="test.self.dir" location="${test.base.dir}/self"/>

  <property name="rtfspec.jar" location="rtfspec.jar"/>
  <property name="rtfspec.run.script" location="src/script/rtfspec"/>
  <property name="rtfspec.run.clj" location="${source.dir}/run_rtfspec.clj"/>
  
  <path id="dependencies">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${deps.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="test.dependencies">
    <path refid="dependencies"/>
    <path location="${source.dir}"/>
    <pathelement location="${rtfspec.jar}" />
  </path>

  <target name="package" description="Create the jar, run tests" depends="jar, all-tests" />

  <target name="clean" description="Remove generated files">
    <delete file="${rtfspec.jar}"/>
    <delete dir="${build.dir}"/>
  </target>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build.dir}"/>
  </target>

  <target name="compile" description="Compile all sources" depends="compile-core, compile-ant" />

  <target name="compile-core">
    <java classname="clojure.lang.Compile" >
      <classpath>
        <path location="${build.dir}"/>
         <path location="${source.dir}"/>
	 <path refid="dependencies" />
      </classpath>
      <sysproperty key="clojure.compile.path" value="${build.dir}"/>
      <arg value="run-rtfspec"/>
    </java>
  </target>

  <target name="compile-ant">
    <java classname="clojure.lang.Compile" >
      <classpath>
        <path location="${build.dir}"/>
         <path location="${source.dir}"/>
	 <path refid="dependencies" />
      </classpath>
      <sysproperty key="clojure.compile.path" value="${build.dir}"/>
      <arg value="rtfspecant"/>
    </java>
  </target>

  <target name="jar" depends="init, compile" description="Create jar file">
    <jar jarfile="${rtfspec.jar}">
      <path location="LICENSE"/>
      <fileset dir="${source.dir}" includes="**/*.clj"/>
      <fileset dir="${build.dir}" includes="**/*.class"/>
    </jar>
  </target>

  <target name="test-clojure" description="Run Smoke tests for Rtfspec">
    <java classname="clojure.lang.Script" failonerror="true" fork="true">
      <arg value="${rtfspec.run.clj}"/>
      <arg value="--"/>
      <arg value="test/smoke"/>
      <classpath>
	<path refid="test.dependencies"/>
      </classpath>
    </java>
  </target>

  <target name="all-tests" description="Run all tests" depends="self-test, smoke-test" />

  <target name="self-test" description="Run Rtfspec unit tests">
    <echo message="----------Self-Test (Does not Use Custom Ant Task)----------"/>
    <java classname="clojure.lang.Script" failonerror="true" fork="true">
      <arg value="${rtfspec.run.clj}"/>
      <arg value="--"/>
      <arg value="${test.self.dir}" />
      <classpath>
	<path refid="test.dependencies"/>
      </classpath>
    </java>
  </target>

  <target name="smoke-test" description="">
    <taskdef name="rtfspec" classname="rtfspecant" classpathref="test.dependencies"/>
      
    <echo message="----------Success----------"/>
    <rtfspec failonerror="true" fork="true" dir="${test.smoke.dir}/success">
      <classpath>
	<path refid="test.dependencies"/>
      </classpath>
    </rtfspec>

    <echo message="----------Failure (Won't break the build)----------"/>
    <rtfspec failonerror="false" fork="true" dir="${test.smoke.dir}/failure">
      <classpath>
        <path refid="test.dependencies"/>
      </classpath>
    </rtfspec>
    <echo message="----------Exception (Won't break the build)----------"/>
    <rtfspec failonerror="false" fork="true" dir="${test.smoke.dir}/exception">
      <classpath>
        <path refid="test.dependencies"/>
      </classpath>
    </rtfspec>
  </target>
</project>
